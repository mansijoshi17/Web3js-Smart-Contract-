pragma solidity >=0.4.22 <0.7.0;


contract Courses{
    
    
    struct Instructor {
         
         uint age;
         string fName;
         string lName;
         
    }
    
    
    mapping( address => Instructor) instructors;
    
    address[] public instructorAccts;
    
    
    function setInstructor(address _address, uint _age, string _fName, string _lName) public {
        
        Instructor storage  instructor = instructors[_address];
        
        
        instructor.age = _age;
        instructor.fName = _fName;
        instructor.lName = _lName;
        
        instructorAccts.push(_address) -1;
        
    }
    
    
    function getInstructors() view public returns(address[]){
        
        return instructorAccts;//Array of address
        
    }
    
       
    function getInstructor(address _address) view public returns(uint, string, string){
        
        return (instructors[_address].age,instructors[_address].fName,instructors[_address].lName);
        
    }

    
    function countInstructors() view public returns(uint){
        return instructorAccts.length ;
    }
}